//------------------------------------------------------------------------------
// <auto-generated>
//     Este código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações a este ficheiro poderão provocar um comportamento incorrecto e perder-se-ão se
//     o código for regenerado.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Interface.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BloodDonator", Namespace="http://schemas.datacontract.org/2004/07/Socorro")]
    [System.SerializableAttribute()]
    public partial class BloodDonator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BloodTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CentimetersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double IMCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double KilogramsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MothersMaidenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OccupationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatefullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TelephoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDay {
            get {
                return this.BirthDayField;
            }
            set {
                if ((this.BirthDayField.Equals(value) != true)) {
                    this.BirthDayField = value;
                    this.RaisePropertyChanged("BirthDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BloodType {
            get {
                return this.BloodTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BloodTypeField, value) != true)) {
                    this.BloodTypeField = value;
                    this.RaisePropertyChanged("BloodType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Centimeters {
            get {
                return this.CentimetersField;
            }
            set {
                if ((this.CentimetersField.Equals(value) != true)) {
                    this.CentimetersField = value;
                    this.RaisePropertyChanged("Centimeters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((object.ReferenceEquals(this.GuidField, value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double IMC {
            get {
                return this.IMCField;
            }
            set {
                if ((this.IMCField.Equals(value) != true)) {
                    this.IMCField = value;
                    this.RaisePropertyChanged("IMC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Kilograms {
            get {
                return this.KilogramsField;
            }
            set {
                if ((this.KilogramsField.Equals(value) != true)) {
                    this.KilogramsField = value;
                    this.RaisePropertyChanged("Kilograms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MothersMaiden {
            get {
                return this.MothersMaidenField;
            }
            set {
                if ((object.ReferenceEquals(this.MothersMaidenField, value) != true)) {
                    this.MothersMaidenField = value;
                    this.RaisePropertyChanged("MothersMaiden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Occupation {
            get {
                return this.OccupationField;
            }
            set {
                if ((object.ReferenceEquals(this.OccupationField, value) != true)) {
                    this.OccupationField = value;
                    this.RaisePropertyChanged("Occupation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sexo {
            get {
                return this.SexoField;
            }
            set {
                if ((object.ReferenceEquals(this.SexoField, value) != true)) {
                    this.SexoField = value;
                    this.RaisePropertyChanged("Sexo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Statefull {
            get {
                return this.StatefullField;
            }
            set {
                if ((object.ReferenceEquals(this.StatefullField, value) != true)) {
                    this.StatefullField = value;
                    this.RaisePropertyChanged("Statefull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetAddress {
            get {
                return this.StreetAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddressField, value) != true)) {
                    this.StreetAddressField = value;
                    this.RaisePropertyChanged("StreetAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TelephoneNumber {
            get {
                return this.TelephoneNumberField;
            }
            set {
                if ((this.TelephoneNumberField.Equals(value) != true)) {
                    this.TelephoneNumberField = value;
                    this.RaisePropertyChanged("TelephoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vehicle {
            get {
                return this.VehicleField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleField, value) != true)) {
                    this.VehicleField = value;
                    this.RaisePropertyChanged("Vehicle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListDonators", ReplyAction="http://tempuri.org/IService1/ListDonatorsResponse")]
        Interface.ServiceReference1.BloodDonator[] ListDonators();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListDonators", ReplyAction="http://tempuri.org/IService1/ListDonatorsResponse")]
        System.Threading.Tasks.Task<Interface.ServiceReference1.BloodDonator[]> ListDonatorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListaDonators", ReplyAction="http://tempuri.org/IService1/ListaDonatorsResponse")]
        Interface.ServiceReference1.BloodDonator[] ListaDonators();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListaDonators", ReplyAction="http://tempuri.org/IService1/ListaDonatorsResponse")]
        System.Threading.Tasks.Task<Interface.ServiceReference1.BloodDonator[]> ListaDonatorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Devolver", ReplyAction="http://tempuri.org/IService1/DevolverResponse")]
        bool Devolver(string textotxt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Devolver", ReplyAction="http://tempuri.org/IService1/DevolverResponse")]
        System.Threading.Tasks.Task<bool> DevolverAsync(string textotxt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddDonator", ReplyAction="http://tempuri.org/IService1/AddDonatorResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Interface.ServiceReference1.BloodDonator[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Interface.ServiceReference1.BloodDonator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        System.Xml.Linq.XElement AddDonator(
                    string number, 
                    string sexo, 
                    string firstName, 
                    string lastName, 
                    string streetAddress, 
                    string city, 
                    string statefull, 
                    string zipCode, 
                    string eMail, 
                    string userName, 
                    string password, 
                    string telephoneNumber, 
                    string mothersMaiden, 
                    string birthDay, 
                    string age, 
                    string occupation, 
                    string company, 
                    string vehicle, 
                    string bloodType, 
                    string kilograms, 
                    string centimeters, 
                    string guid, 
                    string latitude, 
                    string longitude, 
                    object[] doc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddDonator", ReplyAction="http://tempuri.org/IService1/AddDonatorResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> AddDonatorAsync(
                    string number, 
                    string sexo, 
                    string firstName, 
                    string lastName, 
                    string streetAddress, 
                    string city, 
                    string statefull, 
                    string zipCode, 
                    string eMail, 
                    string userName, 
                    string password, 
                    string telephoneNumber, 
                    string mothersMaiden, 
                    string birthDay, 
                    string age, 
                    string occupation, 
                    string company, 
                    string vehicle, 
                    string bloodType, 
                    string kilograms, 
                    string centimeters, 
                    string guid, 
                    string latitude, 
                    string longitude, 
                    object[] doc);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Interface.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Interface.ServiceReference1.IService1>, Interface.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Interface.ServiceReference1.BloodDonator[] ListDonators() {
            return base.Channel.ListDonators();
        }
        
        public System.Threading.Tasks.Task<Interface.ServiceReference1.BloodDonator[]> ListDonatorsAsync() {
            return base.Channel.ListDonatorsAsync();
        }
        
        public Interface.ServiceReference1.BloodDonator[] ListaDonators() {
            return base.Channel.ListaDonators();
        }
        
        public System.Threading.Tasks.Task<Interface.ServiceReference1.BloodDonator[]> ListaDonatorsAsync() {
            return base.Channel.ListaDonatorsAsync();
        }
        
        public bool Devolver(string textotxt) {
            return base.Channel.Devolver(textotxt);
        }
        
        public System.Threading.Tasks.Task<bool> DevolverAsync(string textotxt) {
            return base.Channel.DevolverAsync(textotxt);
        }
        
        public System.Xml.Linq.XElement AddDonator(
                    string number, 
                    string sexo, 
                    string firstName, 
                    string lastName, 
                    string streetAddress, 
                    string city, 
                    string statefull, 
                    string zipCode, 
                    string eMail, 
                    string userName, 
                    string password, 
                    string telephoneNumber, 
                    string mothersMaiden, 
                    string birthDay, 
                    string age, 
                    string occupation, 
                    string company, 
                    string vehicle, 
                    string bloodType, 
                    string kilograms, 
                    string centimeters, 
                    string guid, 
                    string latitude, 
                    string longitude, 
                    object[] doc) {
            return base.Channel.AddDonator(number, sexo, firstName, lastName, streetAddress, city, statefull, zipCode, eMail, userName, password, telephoneNumber, mothersMaiden, birthDay, age, occupation, company, vehicle, bloodType, kilograms, centimeters, guid, latitude, longitude, doc);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> AddDonatorAsync(
                    string number, 
                    string sexo, 
                    string firstName, 
                    string lastName, 
                    string streetAddress, 
                    string city, 
                    string statefull, 
                    string zipCode, 
                    string eMail, 
                    string userName, 
                    string password, 
                    string telephoneNumber, 
                    string mothersMaiden, 
                    string birthDay, 
                    string age, 
                    string occupation, 
                    string company, 
                    string vehicle, 
                    string bloodType, 
                    string kilograms, 
                    string centimeters, 
                    string guid, 
                    string latitude, 
                    string longitude, 
                    object[] doc) {
            return base.Channel.AddDonatorAsync(number, sexo, firstName, lastName, streetAddress, city, statefull, zipCode, eMail, userName, password, telephoneNumber, mothersMaiden, birthDay, age, occupation, company, vehicle, bloodType, kilograms, centimeters, guid, latitude, longitude, doc);
        }
    }
}
